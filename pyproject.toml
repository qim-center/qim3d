[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "qim3d"
version = "1.1.2"
authors = [{ name = "Felipe Delestro", email = "fima@dtu.dk" }]
description = "QIM tools and user interfaces for volumetric imaging"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: User Interfaces",
]
urls = { Homepage = "https://platform.qim.dk/qim3d" }
requires-python = ">=3.10"
dependencies = [
    "gradio==4.44",
    "h5py>=3.9.0",
    "localthickness>=0.1.2",
    "matplotlib>=3.8.0",
    "pydicom==2.4.4",
    "numpy>=1.26.0",
    "outputformat>=0.1.3",
    "Pillow>=10.0.1",
    "plotly>=5.14.1",
    "scipy>=1.11.2",
    "seaborn>=0.12.2",
    "setuptools>=68.0.0",
    "tifffile>=2025.1.10",
    "imagecodecs>=2024.12.30",
    "tqdm>=4.65.0",
    "nibabel>=5.2.0",
    "ipywidgets>=8.1.2",
    "dask>=2023.6.0",
    "k3d>=2.16.1",
    "olefile>=0.46",
    "psutil>=5.9.0",
    "structure-tensor>=0.2.1",
    "noise>=1.2.2",
    "zarr>=2.18.2",
    "ome_zarr>=0.9.0",
    "dask-image>=2024.5.3",
    "scikit-image>=0.24.0",
    "trimesh>=4.4.9",
    "PyGEL3D>=0.5.2",
    "slgbuilder>=0.2.1",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.optional-dependencies]
deep-learning = [
    "torch>=2.0.1",
    "torchvision>=0.15.2",
    "torchinfo>=1.8.0",
    "monai>=1.2.0",
]

[project.scripts]
qim3d = "qim3d.cli:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages]
find = { namespaces = false }


# See list of rules here: https://docs.astral.sh/ruff/rules/

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

select = [
    "F",
    "E",     # Errors
    "W",     # Warnings
    "I",     # Imports
    "N",     # Naming
    "D",     # Documentation
    "UP",    # Upgrades
    "YTT",
    "ANN",
    "ASYNC",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "T10",
    "DJ",
    "EM",
    "EXE",
    "ISC",
    "LOG",
    "PIE",
    "PYI",
    "PT",
    "RSE",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ERA",
    "PGH",
]

ignore = [
    "F821",
    "F841",
    "E501",
    "E731",
    "D100",
    "D101",
    "D107",
    "D201",
    "D202",
    "D203",
    "D205",
    "D211",
    "D212",
    "D401",
    "D407",
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN201",
    "ANN204",
    "S101",
    "S301",
    "S311",
    "S507",
    "S603",
    "S605",
    "S607",
    "B008",
    "B026",
    "B028",
    "B905",
    "W291",
    "W293",
    "COM812",
    "ISC001",
    "SIM113",
]

[tool.ruff.format]
# Use single quotes for strings
quote-style = "single"
